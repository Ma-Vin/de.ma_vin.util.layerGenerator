name: Build and analyze

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout layerGenerator
      uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: adopt
        java-package: jdk
        cache: 'maven'
    - name: Cache SonarCloud packages
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: java
    - name: Build and analyze layer generator sources
      env:
        GITHUB_TOKEN: ${{ secrets.APE_DEPENDENCY_BUILD_PAT }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn clean -B install org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -P sonar-cloud --file pom.xml
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  clean-packages:
    needs: build
    strategy:
      matrix:
        artifacts: [layer-generator, utility, sourcecode-generator, extension-annotation, base-layer-generator, generator-annotation, generator-plugin, sample, util-sample, plugin-sample, annotation-sample, version-sample]
    runs-on: ubuntu-latest
    steps:
    - name: delete previous versions of ${{ matrix.artifacts }}
      run: |
        USERNAME=Ma-Vin
        PACKAGE_TYPE=maven
        VERSION_NAME=2.0.0-SNAPSHOT
        PACKAGE_NAME=de.ma_vin.util.layer.generator.${{ matrix.artifacts }}

        LIST_PACKAGES=$(
            curl -L \
                -H "Accept: application/vnd.github+json" \
                -H "Authorization: Bearer ${{ secrets.LAYER_GITHUB_PACKAGES_PAT }}" \
                https://api.github.com/users/${USERNAME}/packages/${PACKAGE_TYPE}/${PACKAGE_NAME}/versions 
        )

        COUNT_VERSIONS=$(echo "${LIST_PACKAGES}" | grep -P -c '"name":.*')

        if [ "${COUNT_VERSIONS}" = "0" ]; then
            echo "Nothing to delete"
        elif [ "${COUNT_VERSIONS}" = "1" ]; then
            echo "delete package"
            curl -L \
                -X DELETE \
                -H "Accept: application/vnd.github+json" \
                -H "Authorization: Bearer ${{ secrets.LAYER_GITHUB_PACKAGES_PAT }}" \
                https://api.github.com/users/${USERNAME}/packages/${PACKAGE_TYPE}/${PACKAGE_NAME}
        else
            VERSION_ID=$(echo "${LIST_PACKAGES}" | grep -P -B1 "\"name\":.*\"${VERSION_NAME}\"" | grep -oP '(?<="id": ).*(?=,)')
            if [ -n "${VERSION_ID}" ]; then
                echo "delete package version ${VERSION_NAME} with id ${VERSION_ID}"
                curl -L \
                    -X DELETE \
                    -H "Accept: application/vnd.github+json" \
                    -H "Authorization: Bearer ${{ secrets.LAYER_GITHUB_PACKAGES_PAT }}" \
                    https://api.github.com/users/${USERNAME}/packages/${PACKAGE_TYPE}/${PACKAGE_NAME}/versions/${VERSION_ID}
            else
                echo "no version extracted: nothing deleted"
            fi
        fi
  deploy:
    needs: [build, clean-packages]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout layerGenerator
      uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: adopt
        java-package: jdk
        cache: 'maven'
    - name: Deploy layer generator
      env:
        GITHUB_TOKEN: ${{ secrets.LAYER_GITHUB_PACKAGES_PAT }}
      run: mvn -B clean deploy --file pom.xml -DskipTests